Build the image:

$ docker-compose build

Once the image is built, run the container:

$ docker-compose up -d

docker-compose logs -f

docker-compose down 

Build the new image and spin up the two containers:

$ docker-compose up -d --build


after the containers spin up, Run the migrations:

$ docker-compose exec web python manage.py flush --no-input
$ docker-compose exec web python manage.py migrate --noinput

Ensure the default Django tables were created:

$ docker-compose exec db psql --username=postgres --dbname=Assignment_Manager

docker-compose -f docker-compose.prod.yml exec db psql --username=postgres --dbname=Assignment_Manager



hello_django_dev=# \L 
output: list of database

hello_django_dev=# \c hello_django_dev
You are now connected to database "hello_django_dev" as user "hello_django".



hello_django_dev=# \dt
                     List of relations

hello_django_dev=# \q

You can check that the volume was created as well by running:

$ docker volume inspect django-on-docker_postgres_data
You should see something similar to:

[
    {
        "CreatedAt": "2021-08-23T15:49:08Z",
        "Driver": "local",
        "Labels": {
            "com.docker.compose.project": "django-on-docker",
            "com.docker.compose.version": "1.29.2",
            "com.docker.compose.volume": "postgres_data"
        },
        "Mountpoint": "/var/lib/docker/volumes/django-on-docker_postgres_data/_data",
        "Name": "django-on-docker_postgres_data",
        "Options": null,
        "Scope": "local"
    }
]--------


#https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/



1. For Build & Run the container with prod docker file
docker-compose -f docker-compose.prod.yml up -d --build

2. For creating db on postgress
docker-compose -f docker-compose.prod.yml exec db psql --user
name=postgres --dbname=Assignment_Manager

3. For running the migrations
docker-compose -f docker-compose.prod.yml exec web python man
age.py migrate --noinput

4. For creating superuser
docker-compose -f docker-compose.prod.yml exec web python man
age.py createsuperuser

